.boardContainer {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}

.boardTopButton {
  display: none;
  position: absolute;
  width: fit-content;
  top: 5px;
  right: 5px;
  z-index: 100;
}

.spectatorButton {
  z-index: 100;
}

.restartButton {
  display: none;
  padding: 1rem;
  z-index: 100;
}

.board {
  display: flex;
  flex-direction: column;
  position: absolute;
  width: 100%;
  max-width: var(--board-max-width);
  height: 60%;
  top: 60px;
  left: 50%;
  transform: translateX(-50%);
}

.board .north {
  position: absolute;
  top: 0%;
  left: 50%;
  transform: translate(-50%, 0%);
  z-index: 100;
}

.board .west {
  position: absolute;
  transform: translate(-50%, -50%) rotateZ(90deg) translate(0%, -50%);
  transform-origin: 50% 50%;
  top: 50%;
  left: 0%;
  z-index: 100;
}

.board .east {
  position: absolute;
  top: 50%;
  right: 0%;
  transform: translate(50%, -50%) rotateZ(-90deg) translate(0%, -50%);
  transform-origin: 50% 50%;
  z-index: 100;
}

.board .south {
  position: absolute;
  bottom: 0%;
  left: 50%;
  transform: translate(-50%, 0%);
  z-index: 100;
}

.board .horizontalSide {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  max-width: var(--board-height);
}

.board .verticalSide {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  width: 100vw;
}

.board .stat {
  display: flex;
  flex-direction: row;
}

.boardCard.container {
  display: flex;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  background-color: transparent;
  height: min(calc(min(60vh, 100vw) - 2rem * 2), 30vh);
  width: min(calc(min(60vh, 100vw) - 2rem * 2), 30vh);
  align-items: center;
  justify-content: center;
}

.boardCard.container.active {
  display: flex;
  transform: translate(-50%, -50%) scale(1);
  background-color: transparent;
  align-items: center;
  justify-content: center;
}
.boardCard.North {
  height: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -100%);
}
.boardCard.South {
  height: 50%;
  position: absolute;
  bottom: 50%;
  left: 50%;
  transform: translate(-50%, 100%);
}
.boardCard.East {
  height: 50%;
  position: absolute;
  top: 50%;
  right: 50%;
  transform: translate(100%, -50%);
}
.boardCard.West {
  height: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-100%, -50%);
}

.playerStatContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background-color: rgba(143, 188, 143, 0.5);
  border-radius: 1vh 1vh;
  margin: 0.375rem 0.2rem;
  height: 100%;
}

.playerStatContainer.red {
  background-color: rgba(255, 0, 0, 0.5);
}

.dropdown-menu {
  overflow-y: scroll;
  max-height: 15vh;
}

.bidBoardContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.bid {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  border-style: solid;
  border-color: black;
  border-radius: 5px;
  border-collapse: separate;
  background-color: white;
  font-size: var(--btn-font-size);
  width: var(--bid-width);
  height: 100%;
  animation: bidAnim 1.2s ease none;
  transform: translate(0, 0) scale(1);
  transition: 1s;
  opacity: 1;
  cursor: default;
}

.bid:not(:first-child) {
  margin-left: -20px;
}

.bid:hover {
  transform: translate(-20%, -10%);
}

.bid:hover ~ .bid {
  transform: translateX(15%);
}

@keyframes bidAnim {
  from {
    transform: translate(100%, 0) scale(2);
    opacity: 0;
  }
  to {
    display: flex;
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}

.bid.center {
  justify-content: center;
}

.bid.green {
  background-color: green;
}

.bid.red {
  color: red;
}

.startButton {
  z-index: 10;
  font-size: calc(var(--btn-font-size) * 1.5) !important;
}

.startButtonContainer {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  position: absolute;
  height: var(--board-inner-height);
  width: var(--board-inner-width);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  animation: startStatusAnim 1.2s ease forwards;
}

@keyframes startStatusAnim {
  to {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

.boardCardClass {
  height: 100%;
  opacity: 1;
  transform: translate(0, 0) scale(1);
  box-shadow: 5px 10px 18px black;
}

.boardCard .winner {
  filter: brightness(100%);
}

.boardCard .loser {
  filter: brightness(50%);
}

.boardCardClass.North {
  animation: northflyin 1.2s ease none;
  transition: 1s ease-in-out;
}
.boardCardClass.North:hover {
  transform: translateY(-50%);
}

.boardCardClass.South {
  animation: southflyin 1.2s ease none;
  transition: 1s ease-in-out;
}
.boardCardClass.South:hover {
  transform: translateY(50%);
}

.boardCardClass.East {
  animation: eastflyin 1.2s ease none;
  transition: 1s ease-in-out;
}
.boardCardClass.East:hover {
  transform: translateX(50%);
}

.boardCardClass.West {
  animation: westflyin 1.2s ease none;
  transition: 1s ease-in-out;
}
.boardCardClass.West:hover {
  transform: translateX(-50%);
}

@keyframes northflyin {
  from {
    transform: translate(0, -200%) scale(2);
  }
  to {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}

@keyframes southflyin {
  from {
    transform: translate(0, 100%) scale(2);
  }
  to {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}
@keyframes eastflyin {
  from {
    transform: translate(200%, 0) scale(2);
  }
  to {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}
@keyframes westflyin {
  from {
    transform: translate(-200%, 0) scale(2);
  }
  to {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
}

.lastTrickToggleButton {
  position: fixed;
  height: 10vh;
  width: 10vh;
  right: 1vh;
  bottom: calc(10vh + 1vh + 2vh);
  z-index: 10;
  cursor: pointer;
  background-color: white;
  box-shadow: 5px 10px 18px black;
  border: none;
  border-radius: 10vh;
  z-index: 101;
}

.lastTrickToggleButton:hover {
  background-color: lightgray;
}

.lastTrickToggleButton:active {
  transform: scale(0.95);
}

.lastTrickIcon {
  width: 60%;
  height: 60%;
}

.lastTrick {
  top: var(--board-top-margin) !important;
  z-index: 101;
  transition: 0.3s;
}

.gameOverOuterContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -150%);
  opacity: 0;
  font-size: x-large;
  animation: gameOverFlyin 1.2s ease forwards;
}

@keyframes gameOverFlyin {
  to {
    transform: translate(-50%, -50%);
    opacity: 1;
  }
}

.scoreboard {
  margin-left: 5px;
  background-color: royalblue !important;
  color: white !important;
  border-radius: 1vh 1vh;
  margin: 0.375rem 0.2rem;
  transition: 1s;
  font-size: var(--btn-font-size);
  height: 100%;
  pointer-events: none;
}

.roleButton {
  font-size: var(--btn-font-size) !important;
  z-index: 100;
}

.btn {
  border-radius: 1vh 1vh !important;
  font-size: var(--btn-font-size) !important;
}

:root {
  --board-max-width: 1000px;
  --card-height: calc(100vh - var(--board-height) - 12vh);
  --hand-width: 50vw;
}

@media screen and (max-width: 600px) and (orientation: portrait),
  screen and (max-height: 400px) and (orientation: landscape) {
  :root {
    --board-inner-height: calc(70vh - 5rem * 2);
    --board-inner-width: calc(min(100vw, var(--board-max-width)) - 5rem * 2);
    --board-top-margin: calc(var(--board-top-offset) + 35vh);
    --font-size: 1.3rem;
    --btn-font-size: 0.7rem;
    --bid-width: 2.5rem;
    --board-height: 70vh;
  }
  .board {
    top: var(--board-top-offset);
    height: var(--board-height);
  }
}
@media screen and (min-width: 600px) and (max-width: 768px) and (orientation: portrait),
  screen and (min-height: 400px) and (max-height: 600px) and (orientation: landscape) {
  :root {
    --board-inner-height: calc(70vh - 8rem * 2);
    --board-inner-width: calc(min(100vw, var(--board-max-width)) - 8rem * 2);
    --board-top-margin: calc(var(--board-top-offset) + 35vh);
    --font-size: 2rem;
    --btn-font-size: 1rem;
    --bid-width: 3rem;
    --board-height: 70vh;
  }
  .board {
    top: var(--board-top-offset);
    height: var(--board-height);
  }
}

@media screen and (min-width: 768px) and (max-width: 992px) and (orientation: portrait),
  screen and (min-height: 600px) and (max-height: 1200px) and (orientation: landscape) {
  :root {
    --board-inner-height: calc(70vh - 12rem * 2);
    --board-inner-width: calc(min(100vw, var(--board-max-width)) - 12rem * 2);
    --board-top-margin: calc(var(--board-top-offset) + 35vh);
    --font-size: 2.5rem;
    --btn-font-size: 1.25rem;
    --bid-width: 3.5rem;
    --board-height: 70vh;
  }
  .board {
    top: var(--board-top-offset);
    height: var(--board-height);
  }
}

@media screen and (min-width: 992px) and (orientation: portrait),
  screen and (min-height: 1200px) and (orientation: landscape) {
  :root {
    --board-inner-height: calc(70vh - 12rem * 2);
    --board-inner-width: calc(min(100vw, var(--board-max-width)) - 12rem * 2);
    --board-top-margin: calc(var(--board-top-offset) + 35vh);
    --font-size: 3rem;
    --btn-font-size: 2rem;
    --bid-width: 5rem;
    --board-height: 70vh;
  }
  .board {
    top: var(--board-top-offset);
    height: var(--board-height);
  }
}

@media screen and (orientation: portrait) {
  :root {
    --board-top-offset: 0px;
  }
}

@media screen and (orientation: landscape) {
  :root {
    --board-top-offset: 0px;
  }
}
